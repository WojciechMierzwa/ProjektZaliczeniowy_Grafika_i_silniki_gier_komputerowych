
local hearts = {}

local UPDATE_SCORE_TEXT = hash("update_score_text")

local function set_score_text(self, score)
	local score_text = gui.get_node("score")
	gui.set_text(score_text, score)
end

function init(self)
	set_score_text(self, 0)
	print("Initializing hearts...")
	gui.set_enabled(gui.get_node("heart_box"), true)
	update_hearts() 
end

function update_hearts()
	for _, heart_node in ipairs(hearts) do
		gui.delete_node(heart_node)
	end
	hearts = {} 

	-- Create hearts based on the global 'life' variable
	for i = 1, life do
		local heart_node = gui.clone(gui.get_node("heart_box"))
		table.insert(hearts, heart_node) 

		local pos = gui.get_position(heart_node)
		pos.x = pos.x + (i - 1) * 70 
		gui.set_position(heart_node, pos) 

		gui.play_flipbook(heart_node, "heart")
	end
end

-- Function to handle messages
function on_message(self, message_id, message, sender)
	if message_id == hash("update_life") then
		print("Current life before update:", life) 
		update_hearts()  
		print("Current life after update:", life)
	elseif message_id == UPDATE_SCORE_TEXT then
		set_score_text(self, message.score)
	end
end
