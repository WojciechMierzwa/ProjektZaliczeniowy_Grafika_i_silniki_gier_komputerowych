local TOUCH_INPUT = hash("touch")

-- State variable to track if the alert box is visible
local alert_box_visible = false

local function show_alert_box(visible)
	gui.set_enabled(gui.get_node("AlertBox"), visible)  -- Show or hide the parent node (AlertBox)
	alert_box_visible = visible  -- Update the state variable
end

function init(self)
	msg.post(".", "acquire_input_focus")
	show_alert_box(false)  -- Initially, hide the alert box
end

local function reset_save_file()
	local SAVE_FILE = sys.get_save_file("my_game", "test")
	local data = {
		total_coins = 0,
		total_boosts = 0,
		total_enemies_killed = 0,
		total_hearts_picked = 0,
		total_hearts_counter = 3
	}

	local success = sys.save(SAVE_FILE, data)
	if success then
		print("Save file reset successfully.")
	else
		print("Failed to reset save file.")
	end
end

function on_input(self, action_id, action)
	if action_id == TOUCH_INPUT and action.pressed then
		-- Check if the alert box is visible before processing other inputs
		if alert_box_visible then
			-- Handle Yes/No actions while the alert box is open
			if gui.pick_node(gui.get_node("reset"), action.x, action.y) then
				reset_save_file()  -- Reset the save file
				show_alert_box(false)  -- Hide the alert box after resetting
			elseif gui.pick_node(gui.get_node("cancel"), action.x, action.y) then
				show_alert_box(false)  -- Hide the alert box if cancelled
			end
		else
			-- Process main menu button actions only if the alert box is not visible
			if gui.pick_node(gui.get_node("play_button"), action.x, action.y) then
				msg.post("game_controller:/game_controller#game_controller", "load_level", {level = hash("submenu")})
			elseif gui.pick_node(gui.get_node("about_button"), action.x, action.y) then
				msg.post("game_controller:/game_controller#game_controller", "load_level", {level = hash("about")})
			elseif gui.pick_node(gui.get_node("reset_button"), action.x, action.y) then
				show_alert_box(true)  -- Show the alert box
			elseif gui.pick_node(gui.get_node("quit_button"), action.x, action.y) then
				msg.post("@system:", "exit", {code = 0})
			end
		end
	end
end
